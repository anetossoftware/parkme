plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.anetos.parkme"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }


    signingConfigs {
        release {
            storeFile file("../keystore/PARKME")
            storePassword 'Parkme@123'
            keyAlias "anetos"
            keyPassword 'Parkme@123'
        }
        debug_signing_keys {
            storeFile file("../keystore/PARKME")
            storePassword 'Parkme@123'
            keyAlias "anetos"
            keyPassword 'Parkme@123'
        }
    }
    buildTypes {
        release {
            buildConfigField 'String', 'ENVIRON', '"prod"'
            minifyEnabled false // false because of loging issues.
            multiDexEnabled true
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //manifestPlaceholders = [app_name: "Production"]
            /*firebaseCrashlytics {
                // If you don't need crash reporting for your debug build,
                // you can speed up your build by disabling mapping file uploading.
                mappingFileUploadEnabled false
            }*/
        }
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug_signing_keys
            buildConfigField 'String', 'ENVIRON', '"uat"'
            minifyEnabled false
            multiDexEnabled true
            shrinkResources false
            zipAlignEnabled true
            debuggable true
            applicationVariants.all { variant ->
                variant.outputs.all {
                    def formattedDate = new Date().format('HH_mm')
                    def flavor = variant.name
                    def versionName = variant.versionName
                    outputFileName = "${rootProject.getName()}_${formattedDate}-${flavor}-v${versionName}.apk"
                }
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //manifestPlaceholders = [app_name: "Debug"]
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionName}-${variant.versionCode}.apk"
        }
    }
    flavorDimensions "default"
    productFlavors {
        parkme {
            applicationId 'com.moserptech.meghasandesha.belagavi'
            //applicationIdSuffix System.getenv("HOCKEY_BUNDLE_ID") != null ? "" : ".neoDevMob"
            //minSdkVersion 16
            //versionCode project.inCode
            //versionName project.inVersion

            buildConfigField 'String', 'CONCEPT', '"belagavi"'
            buildConfigField 'String', 'BASE_URL', '"http://203.201.62.116:8067/api/"'
            buildConfigField "Boolean", "SHOW_VERSION_TOAST", 'true'
            signingConfig signingConfigs.release
            //Release keys for one signal
            manifestPlaceholders = [app_name                : "Belagavi Megha Sandesha",
                                    ENABLE_CLEARTEXT_TRAFFIC: "false",
                                    google_maps_api_key     : ""
            ]
            //resConfigs "ldltr", "en"
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // core
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation "androidx.vectordrawable:vectordrawable:$vectorDrawable"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    //room Database
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation 'androidx.lifecycle:lifecycle-common:2.5.0'
    //implementation 'androidx.lifecycle:lifecycle-viewmodel:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0'

    // Kotlin Co-routines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"


    implementation 'com.google.code.gson:gson:2.8.9'
    // Retrofit
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofitCoroutinesVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"

    //RxJava2
    // implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    //implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    //implementation 'io.reactivex.rxjava3:rxjava:3.0.0'
    //implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'

    //google-Maps
    implementation "com.google.maps.android:android-maps-utils:$mapsUtilPlayServices"
    implementation "com.google.android.gms:play-services-maps:$mapsPlayServices"
    implementation 'com.google.android.gms:play-services-location:20.0.0'
    implementation "com.google.android.libraries.places:places:$mapsPlacesPlayServices"
    // implementation 'com.google.android.gms:play-services:12.0.1'

    implementation 'com.airbnb.android:lottie:5.0.3'

    //App update
    implementation 'com.google.android.play:core-ktx:1.8.1'
}